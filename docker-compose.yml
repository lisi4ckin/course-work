version: '3'
services:
  elasticsearch:
    image: elasticsearch:7.10.1
    container_name: elasticsearch
    volumes:
      - ./volumes/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
  logstash:
    image: logstash:7.10.1
    container_name: logstash
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./volumes/logstash/:/etc/logstash/conf.d/
    ports:
      - "9999:9999"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
  kibana:
    image: kibana:7.10.1
    container_name: kibana
    volumes:
      - ./volumes/kibana/:/usr/share/kibana/config/
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  lb:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    depends_on:
      - app1
      - app2
    networks:
      - spring-cloud-network
  app1:
    container_name: course-work-app-1
    build:
      context: .
    links:
      - logstash
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
    ports:
      - "8890:8890"
    networks:
      - spring-cloud-network
  app2:
    container_name: course-work-app-2
    build:
      context: .
    links:
      - logstash
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
    ports:
      - "8891:8890"
    networks:
      - spring-cloud-network
  db:
    container_name: db
    image: postgres:latest
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
      - POSTGRES_DB=compose-postgres
    ports:
      - "5433:5432"
    networks:
      - spring-cloud-network
networks:
  spring-cloud-network:
    driver: bridge